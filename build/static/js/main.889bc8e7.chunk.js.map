{"version":3,"sources":["components/AddContact/index.js","components/EditContact/index.js","components/Home/index.js","components/Navbar/index.js","App.js","redux/reducers/contactReducer.js","index.js"],"names":["connect","state","contacts","dispatch","addContact","data","type","payload","useState","name","setName","email","setEmail","phone","setPhone","setType","checked","setChecked","history","useHistory","className","onSubmit","e","preventDefault","checkContactEmailExists","filter","contact","checkContactPhoneExists","toast","warning","length","error","dataArr","id","push","console","log","localStorage","setItem","JSON","stringify","success","placeholder","value","onChange","target","updateContact","useParams","currentContact","find","parseInt","useEffect","onClick","deleteContact","getItem","setData","userData","to","scope","map","Navbar","App","exact","path","component","initialState","store","createStore","action","contactFilter","contactUpdate","Object","assign","whatsapp","composeWithDevTools","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.889bc8e7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toast } from \"react-toastify\";\n\nconst AddPost = ({ contacts, addContact }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const checkContactEmailExists = contacts.filter((contact) =>\n      contact.email === email ? contact : null\n    );\n    const checkContactPhoneExists = contacts.filter((contact) =>\n      contact.phone === phone ? contact : null\n    );\n\n    if (!email || !name || !phone) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkContactEmailExists.length > 0) {\n      return toast.error(\"This email already exists!!\");\n    }\n    if (checkContactPhoneExists.length > 0) {\n      return toast.error(\"This phone number already exists!!\");\n    }\nlet dataArr= []\n    const data = {\n      id: contacts.length > 0 ? contacts[contacts.length - 1].id + 1 : 0,\n      email,\n      name,\n      phone,\n      type,\n      checked,\n    };\ndataArr.push(data);\nconsole.log(\"wala\" ,dataArr)\nlocalStorage.setItem(\"data\", JSON.stringify(dataArr));\n// localStorage.setItem('data', dataArr);\n    addContact(data);\n    toast.success(\"Contact added successfully!!\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"text-center text-dark py-3 display-2\">Add Post</h1>\n      <div className=\"row\">\n        <div className=\"col-md-6 p-5 mx-auto shadow\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Full name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"number\"\n                placeholder=\"Phone\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n              />\n            </div>\n            <div className=\"form-control\">\n              <select value={type} onChange={(e) => setType(e.target.value)}>\n              <option value=\"\">Choose Type</option>\n                <option value=\"office\">Office</option>\n                <option value=\"personal\">Personal</option>\n              </select>\n            </div><br />\n            <div className=\"form-group form-inline\">\n            <label>\n            <input\n             type=\"checkbox\"\n             checked={checked}\n             onChange={(e) => setChecked(e.target.checked)}\n             />{\" \"}\n             &nbsp;&nbsp;This is my whatApp number\n           </label>\n           </div>\n            <div className=\"form-group\">\n              <input\n                className=\"btn btn-block btn-dark\"\n                type=\"submit\"\n                value=\"Add Contact\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (data) => {\n    dispatch({ type: \"ADD_CONTACT\", payload: data });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { toast } from \"react-toastify\";\n\nconst EditContact = ({ contacts, updateContact }) => {\n  const { id } = useParams();\n  const history = useHistory();\n  const currentContact = contacts.find(\n    (contact) => contact.id === parseInt(id)\n  );\n\n  useEffect(() => {\n    setName(currentContact.name);\n    setEmail(currentContact.email);\n    setPhone(currentContact.phone);\n  }, [currentContact]);\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const checkContactEmailExists = contacts.filter((contact) =>\n      contact.email === email && contact.id !== currentContact.id\n        ? contact\n        : null\n    );\n    const checkContactPhoneExists = contacts.filter((contact) =>\n      contact.phone === phone && contact.id !== currentContact.id\n        ? contact\n        : null\n    );\n\n    if (!email || !name || !phone) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkContactEmailExists.length > 0) {\n      return toast.error(\"This email already exists!!\");\n    }\n    if (checkContactPhoneExists.length > 0) {\n      return toast.error(\"This phone number already exists!!\");\n    }\n\n    const data = {\n      id: currentContact.id,\n      email,\n      name,\n      phone,\n      type,\n      checked,\n    };\n\n    updateContact(data);\n    toast.success(\"Contact updated successfully!!\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row d-flex flex-column\">\n        <button\n          className=\"btn btn-dark ml-auto my-5\"\n          onClick={() => history.push(\"/\")}\n        >\n          Go back\n        </button>\n        <div className=\"col-md-6 mx-auto shadow p-5\">\n          {currentContact ? (\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={name}\n                  placeholder={\"Name\"}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={email}\n                  placeholder={\"Email\"}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={phone}\n                  placeholder={\"Phone\"}\n                  onChange={(e) => setPhone(e.target.value)}\n                />\n              </div>\n              <div className=\"form-control\">\n              <select value={type} onChange={(e) => setType(e.target.value)}>\n              <option value=\"\">Choose Type</option>\n                <option value=\"office\">Office</option>\n                <option value=\"personal\">Personal</option>\n              </select>\n            </div><br />\n            <div className=\"form-group form-inline\">\n            <label>\n            <input\n             type=\"checkbox\"\n             checked={checked}\n             onChange={(e) => setChecked(e.target.checked)}\n             />{\" \"}\n             &nbsp;&nbsp;This is my whatApp number\n           </label>\n             \n            </div>\n              <div className=\"form-group d-flex align-items-center justify-content-between my-2\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Update Contact\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  onClick={() => history.push(\"/\")}\n                >\n                  cancel\n                </button>\n              </div>\n            </form>\n          ) : (\n            <h1 className=\"text-center\">No Contact Found</h1>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  updateContact: (data) => {\n    dispatch({ type: \"UPDATE_CONTACT\", payload: data });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContact);\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = ({ contacts, deleteContact }) => {\n  const[data,setData]=useState(localStorage.getItem(\"data\"));\n  useEffect(()=>{\nconst userData = localStorage.getItem(\"data\")\nsetData(userData)\n  },[localStorage])\n  console.log(\"1st\" ,data)\n  return (\n    <div className=\"container\">\n      <div className=\"row d-flex flex-column\">\n        <Link to=\"/add\" className=\"btn btn-outline-dark my-5 ml-auto \">\n          Add Contact\n        </Link>\n        <div className=\"col-md-10 mx-auto my-4\">\n          <table className=\"table table-hover\">\n            <thead className=\"table-header bg-dark text-white\">\n              <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Phone</th>\n                <th scope=\"col\">Type</th>\n                <th scope=\"col\">Whatsapp</th>\n                <th scope=\"col\">Options</th>\n              </tr>\n            </thead>\n            <tbody>\n              {contacts.length > 0 ? (\n                contacts.map((contact, id) => (\n                  <tr key={id}>\n                    <td>{id + 1}</td>\n                    <td>{contact.name}</td>\n                    <td>{contact.email}</td>\n                    <td>{contact.phone}</td>\n                    <td>{contact.type}</td>\n                    <td>{contact?.checked?'true':'false'}</td>\n                    <td>\n                      <Link\n                        to={`/edit/${contact.id}`}\n                        className=\"btn btn-sm btn-primary mr-1\"\n                      >\n                        Edit\n                      </Link>\n                      <button\n                        type=\"button\"\n                        onClick={() => deleteContact(contact.id)}\n                        className=\"btn btn-sm btn-danger\"\n                      >\n                        Delete\n                      </button>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <th>No contacts found</th>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteContact: (id) => {\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"col-md-12 bg-dark py-2\">\n      <nav className=\"navbar bg-dark navbar-dark\">\n        <Link to={\"/\"} className=\"navbar-brand ml-5\">\n          React Redux Contact Book\n        </Link>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport AddPost from \"./components/AddContact\";\nimport EditContact from \"./components/EditContact\";\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Navbar\";\nimport \"./styles.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <Navbar />\n      <Route exact path=\"/\" component={() => <Home />} />\n      <Route exact path=\"/add\" component={() => <AddPost />} />\n      <Route exact path=\"/edit/:id\" component={() => <EditContact />} />\n    </div>\n  );\n};\nexport default App;\n","const initialState = [\n  { id: 0, name: \"Test Name 1 \", email: \"testName1@email.com\", phone: 1234567890 },\n  { id: 1, name: \"Test Name 2\", email: \"testName2@email.com\", phone: 9987654321 },\n];\n\nexport const contactReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_CONTACT\":\n      state = [...state, action.payload];\n      return state;\n    case \"DELETE_CONTACT\":\n      const contactFilter = state.filter((contact) =>\n        contact.id === action.payload ? null : contact\n      );\n      state = contactFilter;\n      return state;\n    case \"UPDATE_CONTACT\":\n      const contactUpdate = state.filter((contact) =>\n        contact.id === action.payload.id\n          ? Object.assign(contact, action.payload)\n          : contact\n      );\n      state = contactUpdate;\n      return state;\n    case \"RESET_CONTACT\":\n      state = [{ name: null, email: null, phone: null, type:null, whatsapp:null }];\n      return state;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { contactReducer } from \"./redux/reducers/contactReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(contactReducer, composeWithDevTools());\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}